qlib_init:
    provider_uri: "data"
    region: cn
market: &market csi300
benchmark: &benchmark SH000300
data_handler_config: &data_handler_config
    start_time: 2008-01-01
    end_time: 2020-08-01
    fit_start_time: 2008-01-01
    fit_end_time: 2014-12-31
    instruments: *market
port_analysis_config: &port_analysis_config
    strategy:
        class: TopkDropoutStrategy
        module_path: qlib.contrib.strategy
        kwargs:
            signal: <PRED>
            topk: 50
            n_drop: 5
    backtest:
        start_time: 2017-01-01
        end_time: 2020-08-01
        account: 100000000
        benchmark: *benchmark
        exchange_kwargs:
            limit_threshold: 0.095
            deal_price: close
            open_cost: 0.0005
            close_cost: 0.0015
            min_cost: 5
task:
    model:
        class: LGBModel
        module_path: qlib.contrib.model.gbdt
        kwargs:
            loss: mse
            colsample_bytree: 0.8879
            learning_rate: 0.2
            subsample: 0.8789
            lambda_l1: 205.6999
            lambda_l2: 580.9768
            max_depth: 8
            num_leaves: 210
            num_threads: 20
    dataset:
        class: DatasetH
        module_path: qlib.data.dataset
        kwargs:
            handler:
                class: DataHandlerLP
                module_path: qlib.data.dataset.handler
                kwargs:
                    learn_processors:
                        - class: CSRankProcessor
                          module_path: qlib.data.dataset.processor
                    data_loader:
                        class: QlibDataLoader
                        kwargs:
                            config:
                                feature: [[
                                    "(-1 * Corr(CSRank(Delta(Log($volume), 1)), CSRank((($close - $open) / $open)), 6))",
                                    '(-1 * Delta((($close - $low) - ($high - $close)) / ($high - $low), 1))',
                                    'Sum(If($close == Ref($close,1), 0, $close - If($close > Ref($close,1), Min($low, Ref($close,1)), Max($high, Ref($close,1)))), 6)',
                                    'If((Sum($close,8)/8 + Std($close,8)) < (Sum($close,2)/2), -1, If((Sum($close,2)/2) < (Sum($close,8)/8 - Std($close,8)), 1, If(($volume / Mean($volume,20)) >= 1, 1, -1)))',
                                    '(-1 * Max(Corr(TSRank($volume,5), TSRank($high,5),5),3))',
                                    '(CSRank(Sign(Delta((($open * 0.85) + ($high * 0.15)), 4))) * -1)',
                                    '(CSRank(Max(($vwap - $close), 3)) + CSRank(Min(($vwap - $close), 3))) * CSRank(Delta($volume, 3))',
                                    'CSRank(Delta((((($high + $low)/2) * 0.2) + ($vwap * 0.8)), 4) * -1)',
                                    'EMA((((($high + $low)/2) - ((Ref($high,1) + Ref($low,1))/2)) * (($high - $low)/$volume)), 7/2)', # Assuming SMA as Mean with adjusted window
                                    'CSRank(Max(Power(If(($close / Ref($close, 1)) - 1 < 0, Std(($close / Ref($close, 1)) - 1, 20), $close), 2), 5))',
                                    'CSRank(Delta(((( $high + $low ) / 2) * 0.2 + $vwap * 0.8),4) * -1)',
                                    'EMA((($high + $low) / 2 - (Ref($high,1) + Ref($low,1)) / 2) * ( $high - $low) / $volume, 61/2)',
                                    'CSRank(Max(If($high - $low > 0, Std($high - $low ,20), $close), 20))',
                                ], [
                                    'ALPHA1',
                                    'ALPHA2',
                                    'ALPHA3',
                                    'ALPHA4',
                                    'ALPHA5',
                                    'ALPHA6',
                                    'ALPHA7',
                                    'ALPHA8',
                                    'ALPHA9',
                                    'ALPHA10',
                                ]]
                                label: [[
                                    '($close / Ref($close, 1)) - 1'
                                ], [
                                    'RET'
                                ]]
            segments:
                train: [2008-01-01, 2014-12-31]
                valid: [2015-01-01, 2016-12-31]
                test: [2017-01-01, 2025-07-15]
    record: 
        - class: SignalRecord
          module_path: qlib.workflow.record_temp
          kwargs: 
            model: <MODEL>
            dataset: <DATASET>
        - class: SigAnaRecord
          module_path: qlib.workflow.record_temp
          kwargs: 
            ana_long_short: False
            ann_scaler: 252
        - class: PortAnaRecord
          module_path: qlib.workflow.record_temp
          kwargs: 
            config: *port_analysis_config 
