qlib_init:
    provider_uri: "data"
    region: cn
    cache: {size: 4096}
market: &market csi300
benchmark: &benchmark SH000300
data_handler_config: &data_handler_config
    start_time: 2008-01-01
    end_time: 2020-08-01
    fit_start_time: 2008-01-01
    fit_end_time: 2014-12-31
    instruments: *market
port_analysis_config: &port_analysis_config
    strategy:
        class: TopkDropoutStrategy
        module_path: qlib.contrib.strategy
        kwargs:
            signal: <PRED>
            topk: 50
            n_drop: 5
    backtest:
        start_time: 2017-01-01
        end_time: 2020-08-01
        account: 100000000
        benchmark: *benchmark
        exchange_kwargs:
            limit_threshold: 0.095
            deal_price: close
            open_cost: 0.0005
            close_cost: 0.0015
            min_cost: 5
task:
    model:
        class: LGBModel
        module_path: qlib.contrib.model.gbdt
        kwargs:
            loss: mse
            colsample_bytree: 0.8879
            learning_rate: 0.2
            subsample: 0.8789
            lambda_l1: 205.6999
            lambda_l2: 580.9768
            max_depth: 8
            num_leaves: 210
            num_threads: 20
    dataset:
        class: DatasetH
        module_path: qlib.data.dataset
        kwargs:
            handler:
                class: DataHandlerLP
                module_path: qlib.data.dataset.handler
                kwargs:
                    learn_processors:
                        - class: CSRankProcessor
                          module_path: qlib.data.dataset.processor
                    data_loader:
                        class: QlibDataLoader
                        kwargs:
                            config:
                                feature: [[
                                    "(-1 * Corr(CSRank(Delta(Log($volume), 1)), CSRank((($close - $open) / $open)), 6))",
                                    '(-1 * Delta((($close - $low) - ($high - $close)) / ($high - $low), 1))',
                                    'Sum(If($close == Ref($close,1), 0, $close - If($close > Ref($close,1), Less($low, Ref($close, 1)), Greater($high, Ref($close, 1)))), 6)',
                                    'If((Sum($close,8)/8 + Std($close,8)) < (Sum($close,2)/2), -1, If((Sum($close,2)/2) < (Sum($close,8)/8 - Std($close,8)), 1, If(($volume / Mean($volume,20)) >= 1, 1, -1)))',
                                    # '(-1 * Max(Corr(TSRank($volume, 5), TSRank($high, 5), 5), 3))',
                                    '(CSRank(Sign(Delta((($open * 0.85) + ($high * 0.15)), 4))) * -1)',
                                    '(CSRank(Greater(($vwap - $close), 3)) + CSRank(Less(($vwap - $close), 3))) * CSRank(Delta($volume, 3))',
                                    'CSRank(Delta((((($high + $low)/2) * 0.2) + ($vwap * 0.8)), 4) * -1)',
                                    'Mean((((($high + $low)/2) - ((Ref($high,1) + Ref($low,1))/2)) * (($high - $low)/$volume)), 4)',
                                    'CSRank(Greater(Power(If(($close / Ref($close, 1)) - 1 < 0, Std(($close / Ref($close, 1)) - 1, 20), $close), 2), 5))',
                                    'Sum(((($close - $low) - ($high - $close)) / ($high - $low)) * $volume, 6)',
                                    'CSRank($open - Mean($vwap, 10)) * (-1 * CSRank(Abs($close - $vwap)))',
                                    'Power($high * $low, 0.5) - $vwap',
                                    '(-1 * Max(CSRank(Corr(CSRank($volume), CSRank($vwap), 5)), 5))',
                                    'Power(CSRank($vwap - Max($vwap, 15)), Delta($close, 5))',
                                    'If($close < Ref($close, 5), ($close - Ref($close, 5)) / Ref($close, 5), If($close == Ref($close, 5), 0, ($close - Ref($close, 5)) / $close))',
                                    '(($close - Ref($close, 6)) / Ref($close, 6)) * 100',
                                    'Slope(Mean($close, 6), 6)',
                                    'Mean(($close / Mean($close, 6) - 1) - Ref(($close / Mean($close, 6) - 1), 3), 12)',
                                    'Mean(If($close > Ref($close, 1), Std($close, 20), 0), 20) / (Mean(If($close > Ref($close, 1), Std($close, 20), 0), 20) + Mean(If($close <= Ref($close, 1), Std($close, 20), 0), 20) + 0.001) * 100',
                                    'Mean($close - Ref($close, 5), 5)',
                                    #'(-1 * CSRank((Delta($close, 7) * (1 - CSRank(WMA(($volume / Mean($volume, 20)), 9)))))) * (1 + CSRank(Sum($close / Ref($close, 1) - 1, 250)))',
                                    '(Mean($close, 7) - $close) + Corr($vwap, Ref($close, 5), 230)',
                                    'Mean((($close - Ref($close, 3)) / Ref($close, 3) * 100) + (($close - Ref($close, 6)) / Ref($close, 6) * 100), 12)',
                                    '3*Mean(($close - Min($low, 9)) / (Max($high, 9) - Min($low, 9)) * 100, 3) - 2 * Mean(Mean(($close - Min($low, 9)) / (Max($high, 9) - Min($low, 9)) * 100, 3), 3)',
                                    '(($close - Ref($close, 6)) / Ref($close, 6)) * $volume',
                                    '(($close - Mean($close, 12)) / Mean($close, 12)) * 100',
                                    '(-1 * Sum(CSRank(Corr(CSRank($high), CSRank($volume), 3)), 3))',
                                    #'(-1 * Min($low, 5) + Ref(Min($low, 5), 5)) * CSRank((Sum(($close / Ref($close, 1) - 1), 240) - Sum(($close / Ref($close, 1) - 1), 20)) / 220) * TSRank($volume, 5)',
                                    'Mean($close, 12) / $close',
                                    #'(Less(CSRank(WMA(Delta($open, 1), 15)), CSRank(WMA(Corr($volume, ($open * 0.65 + $open * 0.35), 17), 7))) * -1)',
                                    'CSRank(Sum(Corr(CSRank($volume), CSRank($vwap), 6), 2))',
                                    '-1 * CSRank(Sum($open, 5) * Sum(($close / Ref($close, 1) - 1), 5) - Ref(Sum($open, 5) * Sum(($close / Ref($close, 1) - 1), 5), 10))',
                                    'If(Mean($high, 20) < $high, (-1 * Delta($high, 2)), 0)',
                                    '(CSRank(WMA(Corr(($vwap * 0.3 + $open * 0.7), Sum(Mean($volume, 180), 37), 14), 12)) - CSRank(WMA(Delta($close, 2), 8)))',
                                    'Sum(If($close > Ref($close, 1), $volume, 0), 26) / Sum(If($close <= Ref($close, 1), $volume, 0), 26) * 100',
                                    'CSRank(Greater(Delta(($vwap), 3), 5))* -1',
                                    '(-1 * CSRank(Std($high, 10))) * Corr($high, $volume, 10)',
                                    'Sum(If($close > Ref($close, 1), $volume, If($close < Ref($close, 1), -1 * $volume, 0)), 6)',
                                    # 'TSRank(WMA(Corr(($low), Mean($volume,10), 7), 6), 4) + TSRank(WMA(Delta($vwap, 3), 10), 15)',
                                    'CSRank(Delta(($close * 0.6) + ($open * 0.4), 1)) * CSRank(Corr($vwap, Mean($volume, 150), 15))',
                                    '(Mean($close, 3) + Mean($close, 6) + Mean($close, 12) + Mean($close, 24)) / (4 * $close)',
                                    'EMA((Max($high, 6) - $close)/(Max($high, 6) - Min($low, 6)) * 100, 9)',
                                    '-1*(CSRank((Sign(($close - Ref($close, 1))) + Sign((Ref($close, 1) - Ref($close, 2)))) + Sign((Ref($close, 2) - Ref($close, 3))))) * Sum($volume, 5) / Sum($volume, 20)',
                                    'Sum(If(($high + $low) >= (Ref($high, 1) + Ref($low, 1)), 0, Greater(Abs($high - Ref($high, 1)), Abs($low - Ref($low, 1)))), 12) / (Sum(If(($high + $low) >= (Ref($high, 1) + Ref($low, 1)), 0, Greater(Abs($high - Ref($high, 1)), Abs($low - Ref($low,1)))), 12)+ Sum(If(($high + $low) <= (Ref($high, 1) + Ref($low,1)), 0, Greater(Abs($high - Ref($high, 1)), Abs($low - Ref($low, 1)))), 12))',
                                    '((Sum(If(($high + $low) <= (Ref($high, 1) + Ref($low, 1)), 0, Greater(Abs($high - Ref($high, 1)), Abs($low - Ref($low, 1)))), 12) / (Sum(If(($high + $low) <= (Ref($high, 1) + Ref($low, 1)), 0, Greater(Abs($high - Ref($high, 1)), Abs($low - Ref($low, 1)))), 12) + Sum(If(($high + $low) >= (Ref($high, 1) + Ref($low, 1)), 0, Greater(Abs($high - Ref($high, 1)), Abs($low - Ref($low, 1)))), 12))) - (Sum(If(($high + $low) >= (Ref($high, 1) + Ref($low,1)), 0, Greater(Abs($high - Ref($high, 1)), Abs($low - Ref($low, 1)))), 12) / (Sum(If(($high + $low) >= (Ref($high, 1) + Ref($low, 1)), 0, Greater(Abs($high - Ref($high, 1)), Abs($low - Ref($low, 1)))), 12) + Sum(If(($high + $low) <= (Ref($high,1) + Ref($low, 1)), 0, Greater(Abs($high - Ref($high,1)), Abs($low - Ref($low,1)))), 12))))',
                                    'Sum(Greater(0, $high - Ref(($high + $low + $close) / 3, 1)), 26) / Sum(Greater(0, Ref(($high + $low + $close) / 3, 1) - $low), 26) * 100',
                                ], [
                                    'ALPHA1', 'ALPHA2', 'ALPHA3', 'ALPHA4', 'ALPHA6', #'ALPHA5',
                                    'ALPHA7', 'ALPHA8', 'ALPHA9', 'ALPHA10', 'ALPHA11', 'ALPHA12',
                                    'ALPHA13', 'ALPHA16', 'ALPHA17', 'ALPHA19', 'ALPHA20', 'ALPHA21',
                                    'ALPHA22', 'ALPHA23', 'ALPHA24', 'ALPHA26', 'ALPHA27', #'ALPHA25',
                                    'ALPHA28', 'ALPHA29', 'ALPHA31', 'ALPHA32', 'ALPHA34', #'ALPHA33',
                                    'ALPHA36', 'ALPHA37', 'ALPHA38', 'ALPHA39', 'ALPHA40', #'ALPHA35',
                                    'ALPHA41', 'ALPHA42', 'ALPHA43', 'ALPHA45', 'ALPHA46', #'ALPHA44',
                                    'ALPHA47', 'ALPHA48', 'ALPHA49', 'ALPHA50', 'ALPHA52',
                                ]]
                                label: [[
                                    '($close / Ref($close, 1)) - 1'
                                ], [
                                    'RET'
                                ]]
            segments:
                train: [2008-01-01, 2014-12-31]
                valid: [2015-01-01, 2016-12-31]
                test: [2017-01-01, 2025-07-15]
    record: 
        - class: SignalRecord
          module_path: qlib.workflow.record_temp
          kwargs: 
            model: <MODEL>
            dataset: <DATASET>
        - class: SigAnaRecord
          module_path: qlib.workflow.record_temp
          kwargs: 
            ana_long_short: False
            ann_scaler: 252
        - class: PortAnaRecord
          module_path: qlib.workflow.record_temp
          kwargs: 
            config: *port_analysis_config 
